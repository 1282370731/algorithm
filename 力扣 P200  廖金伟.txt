int map[4][2] = { {1,0}, {-1,0}, {0,1}, {0,-1}  };
void dfs(char** grid, int gridsize, int* gridcolsize, int i, int j){

	if(grid[i][j]!='1') {
		return;
	}
	grid[i][j] = '2';
	for(int k=0;k<4;k++) {
		int x = i + map[k][0];
		int y = j + map[k][1];
		if(x<0 || x>=gridsize|| y<0|| y>=gridcolsize[0]) {
			continue;
		}
		dfs(grid, gridsize, gridcolsize, x, y);
	}
}
int numIslands(char** grid, int gridSize, int* gridColSize){
	int ans=0;
    if(gridSize==0){
        return 0;
    }
	for(int i=0;i<gridSize;i++) {
		for(int j=0;j<gridColSize[0];j++) {
			if(grid[i][j]=='1'){
				dfs(grid, gridSize, gridColSize, i, j);
                ans++;
			}
		}
	}
    return ans;
}