#include<iostream> 
#include<cstdlib>
#include<queue>
using namespace std;
int main(){
    int infinity = 99999999;
    int n,m;
    cin>>n>>m;
    int *u;
    int *v;
    int *w;
    u = (int *)malloc((m+1)*sizeof(int));
    v = (int *)malloc((m+1)*sizeof(int));
    w = (int *)malloc((m+1)*sizeof(int));
    int *book;
    book = (int *)malloc((n+1)*sizeof(int));
    for(int i = 0; i <= n; i++) book[i] = 0;
    int *first;
    int *next;
    first = (int *)malloc((n+1)*sizeof(int));
    next = (int *)malloc((m+1)*sizeof(int));
    for(int i = 0; i <= n; i++) first[i] = -1;
    for(int i = 1; i <= m; i++){
        cin>>u[i]>>v[i]>>w[i];
        next[i] = first[u[i]];
        first[u[i]] = i;
    }
    int *dis;
    dis = (int *)malloc((n+1)*sizeof(int));
    for(int i = 1; i <= n; i++){
        dis[i] = infinity;
    }
    dis[1] = 0;
    
    queue<int> q; 
    q.push(1);
    book[1] = 1;
    while(!q.empty()){
        int k = q.front();
        k = first[k];
        while(k != -1){
            if(dis[u[k]] + w[k] < dis[v[k]]){
                dis[v[k]] = dis[u[k]] + w[k];
                if(book[v[k]] == 0){
                    q.push(v[k]);
                    book[v[k]] = 1;
                }
            }
            k = next[k];
        }
        book[q.front()] = 0; 
        q.pop();
    }
    
    for(int i = 2; i <= n; i++){
        cout<<dis[i]<<endl;
    }
    return 0;
}
