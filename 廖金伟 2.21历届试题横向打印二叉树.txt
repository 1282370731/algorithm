#include <stdio.h>
#include <algorithm>
#include <iostream>
using namespace std;
 
char str[210][30000];
int cnt = 0;
int cntStr = 0;
 
struct Node {
    int val; 
    int lson, rson;
    int  num;
    int tier;
    int ls;
 
    Node() {
        num = -1;
        lson = -1;
        rson = -1;
        tier = -1;
        ls = -1;
    }
}tree[210];
 
void add(int rt, int val, int num) {
    if (tree[rt].val < val) {
        if (tree[rt].rson == -1) {
            tree[rt].rson = num;
            tree[num].val = val;
            tree[num].num = num;
        }
        else add(tree[rt].rson, val, num);
    }
    else {
        if (tree[rt].lson == -1) {
            tree[rt].lson = num;
            tree[num].val = val;
            tree[num].num = num;
        }
        else add(tree[rt].lson, val, num);
    }
}
 
void midSearch(int rt) {
    if (tree[rt].rson != -1) {
        midSearch(tree[rt].rson);
    }
    printf("%d\n", tree[rt].val);
    if (tree[rt].lson != -1)
    midSearch(tree[rt].lson);
}
 
int getlen(int num) {
    int cnt = 0;
    while(num) {
        num /= 10;
        cnt++;
    }
    return cnt;
}
 
void printToStr(int rt, int len) {
    if (tree[rt].rson != -1) {
        printToStr(tree[rt].rson, len + getlen(tree[rt].val) - 1 +  (rt == 0 ? 2 : 4));
    }
    for (int i=0; i<len; ++i)
        str[cntStr][i] = '.';
    sprintf(str[cntStr]+len, "%s%d%s", rt == 0 ? "\0" : "|-", tree[rt].val, ((tree[rt].lson == -1 && tree[rt].rson == -1) ? "\n" : "-|\n"));
    tree[rt].tier = cntStr;
    if (tree[rt].lson != -1 || tree[rt].rson != -1)
    tree[rt].ls = len + (rt == 0 ? 0 : 2) + getlen(tree[rt].val) + 1;
    cntStr++;
    if (tree[rt].lson != -1) {
        printToStr(tree[rt].lson, len + getlen(tree[rt].val) - 1 + (rt == 0 ? 2 : 4));
    }
}
void format(int rt) {
    if (tree[rt].rson != -1) {
        format(tree[rt].rson);
        for (int i=tree[tree[rt].rson].tier; i<=tree[rt].tier; ++i) {
            str[i][tree[rt].ls] = '|';
        }
    }
    if (tree[rt].lson != -1) {
        format(tree[rt].lson);
        for (int i=tree[rt].tier; i<=tree[tree[rt].lson].tier; ++i) {
            str[i][tree[rt].ls] = '|';
        }
    }
}
 
int main() {
    int n;
    scanf("%d", &n);
    tree[0].val = n;
    tree[0].num = 0;
 
    while(~scanf("%d", &n)) {
        add(0, n, ++cnt);
    }
 
    printToStr(0, 0);
    format(0);
 
    for (int i=0; i<cntStr; ++i) {
        printf("%s", str[i]);
    }
    return 0;
}