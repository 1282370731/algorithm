class Solution {
public:
    vector<vector<int>> result;
    vector<vector<int>> permute(vector<int>& nums) {
        int n = nums.size();
        dfs(nums, n, n);
        return result;
    }
    void dfs(vector<int>& nums, int n, int k)
    {
        if (k == 1)
        {
            result.push_back(nums);
            return;
        }
        for (int i = 0; i < k; i++)
        {
            int temp = nums[i];
            nums[i] = nums[k-1];
            nums[k-1] = temp;
            dfs(nums, n, k-1);
            temp = nums[i];
            nums[i] = nums[k-1];
            nums[k-1] = temp;
        }
    }
};